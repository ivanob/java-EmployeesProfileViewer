package test.evaluation.operations.fuzzy;

import static org.junit.Assert.assertTrue;

import org.junit.Before;
import org.junit.Test;

import controller.competences.Competence;
import controller.employers.Employer;
import controller.evaluations.Evaluation;
import controller.evaluations.Source;

import rs.ac.ns.ftn.tmd.fuzzy.CrispSet;
import rs.ac.ns.ftn.tmd.fuzzy.DecomposedFuzzyNumber;
import rs.ac.ns.ftn.tmd.fuzzy.FuzzyInterval;
import rs.ac.ns.ftn.tmd.fuzzy.FuzzySet;

public class FuzzyIntervalMeansTest {
	private FuzzyInterval fi1, fi2, fi3;
	private DecomposedFuzzyNumber dfn1;
	private CrispSet cs1;
	private Employer empl;
	private Source source;
	
	@Before 
	public void setUp(){
		fi1 = new FuzzyInterval(7,8,1,1,FuzzySet.FUNCTION_LINEAR,FuzzySet.FUNCTION_LINEAR,100);
		fi2 = new FuzzyInterval(2,5,1,1,FuzzySet.FUNCTION_LINEAR,FuzzySet.FUNCTION_LINEAR,100);
		fi3 = new FuzzyInterval(4,5,3,2,FuzzySet.FUNCTION_LINEAR,FuzzySet.FUNCTION_LINEAR,100);
		dfn1 = new DecomposedFuzzyNumber(4,1,3,FuzzySet.FUNCTION_LINEAR,
				FuzzySet.FUNCTION_LINEAR, 100);
		cs1 = new CrispSet(2,8);
		source=new Source("max", 0,0);
	}
	
	@Test
	public void evalIntervalMean1(){
		empl = new Employer("",1);
		Competence c = new Competence("", 0);
		empl.addEvaluation(new Evaluation(c,source,fi1));
		empl.addEvaluation(new Evaluation(c,source,fi2));
		FuzzySet res = empl.getEvaluation(0).getMark();
		assertTrue(res instanceof FuzzyInterval);
		FuzzyInterval fin = (FuzzyInterval)res;
		//Valores extremos
		assertTrue(res.getMembershipValue(3.5)==0);
		assertTrue(res.getMembershipValue(7.5)==0);
		assertTrue(res.getMembershipValue(4.5)==1);
		assertTrue(res.getMembershipValue(6.5)==1);
		//Valores fuera de rango
		assertTrue(res.getMembershipValue(3.4)==0);
		assertTrue(res.getMembershipValue(3)==0);
		assertTrue(res.getMembershipValue(0)==0);
		assertTrue(res.getMembershipValue(7.6)==0);
		assertTrue(res.getMembershipValue(8)==0);
		assertTrue(res.getMembershipValue(10)==0);
		//Valores intermedios
		assertTrue(res.getMembershipValue(4)==0.5);
		assertTrue(res.getMembershipValue(7)==0.5);
	}
	
	
	@Test
	public void evalIntervalMean2(){
		empl = new Employer("",1);
		Competence c = new Competence("", 0);
		empl.addEvaluation(new Evaluation(c,source,fi3));
		empl.addEvaluation(new Evaluation(c,source,fi2));
		FuzzySet res = empl.getEvaluation(0).getMark();
		assertTrue(res instanceof FuzzyInterval);
		FuzzyInterval fin = (FuzzyInterval)res;
		//Valores extremos
		assertTrue(res.getMembershipValue(3)==1);
		assertTrue(res.getMembershipValue(5)==1);
		assertTrue(res.getMembershipValue(1)==0);
		assertTrue(res.getMembershipValue(6.5)==0);
		//Valores fuera de rango
		assertTrue(res.getMembershipValue(0)==0);
		assertTrue(res.getMembershipValue(0.99)==0);
		assertTrue(res.getMembershipValue(6.6)==0);
		assertTrue(res.getMembershipValue(7)==0);
		//Valores intermedios
		assertTrue(res.getMembershipValue(2)==0.5);
		assertTrue(res.getMembershipValue(5.75)==0.5);
	}
	
	@Test
	public void evalIntervalMean3(){
		empl = new Employer("",1);
		Competence c = new Competence("", 0);
		empl.addEvaluation(new Evaluation(c,source,fi3));
		empl.addEvaluation(new Evaluation(c,source,dfn1));
		FuzzySet res = empl.getEvaluation(0).getMark();
		assertTrue(res instanceof FuzzyInterval);
		FuzzyInterval fin = (FuzzyInterval)res;
		//Valores extremos
		assertTrue(res.getMembershipValue(2)==0);
		assertTrue(res.getMembershipValue(7)==0);
		assertTrue(res.getMembershipValue(4)==1);
		assertTrue(res.getMembershipValue(4.5)==1);
		//Valores fuera de rango
		assertTrue(res.getMembershipValue(1.9)==0);
		assertTrue(res.getMembershipValue(7.1)==0);
		//Valores intermedios
		assertTrue(res.getMembershipValue(4.25)==1);
		assertTrue(res.getMembershipValue(5.75)==0.5);
		assertTrue(res.getMembershipValue(3)==0.5);
	}
	
	@Test
	public void evalIntervalMean4(){
		empl = new Employer("",1);
		Competence c = new Competence("", 0);
		empl.addEvaluation(new Evaluation(c,source,fi1));
		empl.addEvaluation(new Evaluation(c,source,cs1));
		FuzzySet res = empl.getEvaluation(0).getMark();
		assertTrue(res instanceof FuzzyInterval);
		FuzzyInterval fin = (FuzzyInterval)res;
		//Valores extremos
		assertTrue(res.getMembershipValue(4)==0);
		assertTrue(res.getMembershipValue(8.5)==0);
		assertTrue(res.getMembershipValue(5)==1);
		assertTrue(res.getMembershipValue(4.5)==1);
		//Valores fuera de rango
		assertTrue(res.getMembershipValue(3.9)==0);
		assertTrue(res.getMembershipValue(8.6)==0);
		//Valores intermedios
		assertTrue(res.getMembershipValue(5)==1);
		assertTrue(res.getMembershipValue(6)==1);
		assertTrue(res.getMembershipValue(7)==1);
		assertTrue(res.getMembershipValue(4.25)==0.5);
		assertTrue(res.getMembershipValue(8.25)==0.5);
	}
}
